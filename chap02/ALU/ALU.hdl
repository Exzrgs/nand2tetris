CHIP ALU{
    IN x[16], y[16], zx, nx, zy, ny, f, no;
    OUT out[16], zr, ng;
    PARTS:
    // ゼロにするかどうか
    Mux16(a=x, b[0..15]=false, sel=zx, out=x1);
    Mux16(a=y, b[0..15]=false, sel=zy, out=y1);

    // 反転させるかどうか
    Not16(in=x1, out=notx);
    Not16(in=y1, out=noty);
    Mux16(a=x1, b=notx, sel=nx, out=x2);
    Mux16(a=y1, b=noty, sel=ny, out=y2);
    
    // AndかAddか
    And16(a=x2, b=y2, out=z1);
    Add16(a=x2, b=y2, out=z2);
    Mux16(a=z1, b=z2, sel=f, out=out1);

    // 反転させるかどうか
    Not16(in=out1, out=notout);
    Mux16(a=out1, b=notout, sel=no, out[0..7]=tmpout1, out[8..15]=tmpout2, out[15]=ng, out=out);
    
    // ゼロかどうか判定
    Or8Way(in=tmpout1, out=zr1);
    Or8Way(in=tmpout2, out=zr2);
    Or(a=zr1, b=zr2, out=zr3);
    Not(in=zr3, out=zr);
}